{"version":3,"sources":["webpack:///./components/02-components/menus/tabs/tabs.scss","webpack:///./config/_mixins.scss","webpack:///./components/00-base/global/01-colors/_color-vars.scss","webpack:////Users/andreassahle/workspace/CONTRIB/drupal-extraclassy/node_modules/breakpoint-sass/stylesheets/_breakpoint.scss"],"names":[],"mappings":"AAQA;ECUE,gBAAgB;EAChB,SAAS;EACT,UAAU;EDTV,gCELqB,EFWtB;;AAGD;EACE,aAAa,EAKd;EAND;IAII,cAAc,EACf;;AAGH;EACE,eAAe,EAChB;;AAGD;EAEI,cAAc,EACf;;AAIH;EACE,mBAAmB;EACnB,UAAU,EACX;;AAED;EACE,oBAAoB,EACrB;;AGiBG;IHxDJ;MAMI,8BERmB;MFSnB,oBAAa;MAAb,aAAa,EAEhB","file":"components/tabs.css","sourcesContent":["@import 'breakpoint-sass/stylesheets/breakpoint';\n@import 'config/breakpoints';\n@import 'components/00-base/global/01-colors/color-vars';\n@import 'config/colors-used';\n@import 'config/mixins';\n@import 'config/variables';\n\n// Tab Navigation\n.tabs__nav {\n  @include list-reset;\n\n  border-bottom: 1px solid $color__gray-1;\n\n  @include large {\n    border-left: 1px solid $color__gray-1;\n    display: flex;\n  }\n}\n\n// Tab Content (hidden only in full #tabs js version)\n.tabs__tab {\n  display: none;\n\n  &.is-active {\n    display: block;\n  }\n}\n\n.tabs__content {\n  padding: 1.5rem;\n}\n\n// No-js fallback\n.tabs.no-js {\n  .tabs__tab.is-active {\n    display: block;\n  }\n}\n\n// Drupal Local Tasks variant\n.tabs__nav--local-tasks {\n  margin: 1em 0 0.5em;\n  padding: 0;\n}\n\n.tabs__link--local-tasks {\n  padding: 0.3em 1.5em;\n}\n","/////////////////////\n// General Mixins (put specific ones in component files where applicable)\n\n/// Mixin - Clearfix.\n/// Adds clearfix based on http://bourbon.io/docs/#clearfix\n/// use example =   @include clearfix\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: '';\n    display: table;\n  }\n}\n\n/// Mixin - list-reset\n/// Reset list item defaults when no margin, padding, list styles needed\n@mixin list-reset {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/// Mixin - With Icon\n/// Precede Text with SVG icon\n@mixin with-icon {\n  background-size: cover;\n  content: '';\n  display: inline-block;\n  margin-right: 0.1em;\n  padding: 0.8em;\n}\n\n/// Mixin - Wrapper\n/// Outer container mixin for large screens\n@mixin wrapper {\n  margin: 0 auto;\n  max-width: $max-width;\n\n  @include clearfix;\n}\n\n/// Mixin - More Link\n/// Used in a number of views\n@mixin more-link {\n  a {\n    font-size: 0.9rem;\n    font-weight: 600;\n    text-decoration: none;\n\n    &::before {\n      content: '»';\n      font-size: 1.2rem;\n      margin-right: 0.2em;\n    }\n  }\n}\n\n/// Mixin - Back Link\n/// Used in a number of views\n@mixin back-link {\n  display: block;\n  font-size: 0.9rem;\n  font-weight: 600;\n  text-decoration: none;\n\n  &::before {\n    content: '«';\n    font-size: 1.2rem;\n    margin-right: 0.2em;\n  }\n}\n\n/// Mixin - Body Copy\n@mixin body-copy {\n  font-family: $font-body;\n  font-size: $base-font-size;\n  line-height: 1.6em;\n}\n\n/// Mixin - Transition\n@mixin transition($transition-property, $transition-time, $method) {\n  -webkit-transition: $transition-property $transition-time $method;\n  -moz-transition: $transition-property $transition-time $method;\n  -ms-transition: $transition-property $transition-time $method;\n  -o-transition: $transition-property $transition-time $method;\n  transition: $transition-property $transition-time $method;\n}\n\n/// Mixin - Standard Margin\n@mixin margin {\n  margin-bottom: 1em;\n}\n\n@mixin focus-outline($type: 'border') {\n  @if ($type == 'border') {\n    outline: 1px solid $color-link;\n  }\n\n  @if ($type == 'blurred') {\n    box-shadow: 0 0 0 3px $color-link;\n    outline: 1px solid transparent;\n  }\n}\n\n// Only applied to bold weight text\n@mixin font-smoothing {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n@mixin letter-spacing {\n  letter-spacing: 0.5px;\n}\n@function rem($px) {\n  @return ($px / $base-font-size) * 1rem;\n}\n\n@function em($px) {\n  @return ($px / $base-font-size) * 1em;\n}\n","\n$color__blue-20: #7cc7ff !default;\n$color__blue-30: #5aaafa !default;\n$color__blue-40: #5596e6 !default;\n$color__blue-50: #4178be !default;\n$color__blue-90: #152935 !default;\n$color__gray-1: #e5e5e5 !default;\n$color__gray-2: #ccc !default;\n$color__gray-3: #999 !default;\n$color__gray-4: #666 !default;\n$color__gray-5: #4c4c4c !default;\n$color__gray-6: #333 !default;\n$color__navy-gray-1: #0f212e !default;\n$color__navy-gray-2: #20343e !default;\n$color__navy-gray-3: #2d3f49 !default;\n$color__navy-gray-4: #394b54 !default;\n$color__navy-gray-5: #42535c !default;\n$color__navy-gray-6: #5a6872 !default;\n$color__navy-gray-7: #8c9ba5 !default;\n$color__navy-gray-8: #dfe6eb !default;\n$color__navy-gray-9: #eff2f5 !default;\n$color__white: #fff !default;\n$color__near-white: #f2f2f2 !default;\n$color__black: black !default;\n\n\n$color__blue-51: #3d70b2 !default;\n$color__gray-1: #dfe3e6 !default;\n$color__gray-2: #f0f3f6 !default;\n$color__gray-3: #f5f7fa !default;\n\n$color__blue-10: #c0e6ff !default;\n$color__blue-60: #325c80 !default;\n$color__teal-10: #a7fae6 !default;\n$color__teal-20: #6eedd8 !default;\n$color__teal-30: #41d6c3 !default;\n$color__teal-40: #00b4a0 !default;\n$color__teal-50: #008571 !default;\n$color__teal-60: #006d5d !default;\n$color__green-10: #c8f08f !default;\n$color__green-20: #b4e051 !default;\n$color__green-30: #8cd211 !default;\n$color__green-40: #5aa700 !default;\n$color__green-50: #4b8400 !default;\n$color__green-60: #2d660a !default;\n$color__yellow-10: #fde876 !default;\n$color__yellow-20: #fdd600 !default;\n$color__yellow-30: #efc100 !default;\n$color__yellow-60: #735f00 !default;\n$color__orange-10: #ffd4a0 !default;\n$color__orange-20: #ffa573 !default;\n$color__orange-30: #ff7832 !default;\n$color__orange-60: #a53725 !default;\n$color__red-10: #ffd2dd !default;\n$color__red-30: #ff7d87 !default;\n$color__red-40: #ff5050 !default;\n$color__red-50: #e71d32 !default;\n$color__red-60: #ad1625 !default;\n$color__purple-10: #eed2ff !default;\n$color__purple-20: #d7aaff !default;\n$color__purple-30: #ba8ff7 !default;\n$color__purple-40: #af6ee8 !default;\n$color__purple-60: #734098 !default;\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n"],"sourceRoot":""}